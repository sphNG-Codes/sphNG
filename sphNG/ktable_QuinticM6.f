      SUBROUTINE ktable
c*********************************************************
c  This subroutine builds a table for the kernel,
c  the gradient of the kernel, the mass fraction,
c  and the potential energy.
c  The entry is v**2.
c
c  DO NOT EDIT: AUTO-GENERATED by kernels.py
c  KERNEL NAME: M_6 quintic 
c  AUTHOR: kernels.py, by Daniel Price
c  GENERATED: 2013-06-11 10:29:12.957279
c
c*********************************************************
      IMPLICIT NONE ! because life is worth living
      INCLUDE 'idim'

      REAL*8 sum, v2max, q, q2, q3, q4, q5, q6, q7, q8
      INTEGER i

      INCLUDE 'COMMONS/physcon'
      INCLUDE 'COMMONS/kerne'
      INCLUDE 'COMMONS/table'
      INCLUDE 'COMMONS/logun'
      INCLUDE 'COMMONS/debug'
c
c--Allow for tracing flow
c
      IF (itrace.EQ.'all') WRITE(iprint, 99001)
99001 FORMAT (' entry subroutine ktable')
c
c--Factor for setting size of smoothing length: h = hfact*(m/rho)^(1/3)
c
      hfact = 1.2

      WRITE (iprint, 99002) hfact
99002 FORMAT (/,' SPH Kernel : M6 quintic with hfact =',F5.2,/)
c
c--Maximum interaction length and step size
c
      radkernel = 3.0
      part1kernel = 1.0
      part2kernel = 2.0
      v2max = radkernel*radkernel
      dvtable = v2max/itable
      ddvtable = itable/v2max
c
c--Build tables
c
      DO i=0,itable
         q2 = i*dvtable
         q = sqrt(q2)
         q3 = q*q2
         q4 = q*q3
         q5 = q*q4
         q6 = q*q5
         q7 = q*q6
         q8 = q*q7
         IF (q < 1.0) THEN
            sum = -10.0*q5 + 30.0*q4 - 60.0*q2 + 66.0
            wij(i) = sum
            sum = q*(-50.0*q3 + 120.0*q2 - 120.0)
            grwij(i) = sum
            sum = q3*(-35.*q5 + 120.*q4 - 336.*q2 + 616.)/840.
            fmass(i) = sum
            sum = -q7/168. + q6/42. - q4/10. + 11.*q2/30. - 239./210.
            fpoten(i) = sum
            sum = -q7/21. + q6/6. - q4/2. + 11.*q2/10. - 239./210.
            dphidh(i) = sum
         ELSEIF (q < 2.0) THEN
            sum = -6.0*(-q + 2.0)**5 + (-q + 3.0)**5
            wij(i) = sum
            sum = 25.0*q4 - 180.0*q3 + 450.0*q2 - 420.0*q + 75.0
            grwij(i) = sum
            sum = q8/48. - 3.*q7/14. + 5.*q6/6. - 7.*q5/5. + 5.*q4/8. + 
     &            17.*q3/30. + 1./336.
            fmass(i) = sum
            sum = (5*q8 - 60.*q7 + 280.*q6 - 588.*q5 + 350.*q4 + 
     &            476.*q3 - 1892.*q - 5.)/(1680.*q)
            fpoten(i) = sum
            sum = q7/42. - q6/4. + q5 - 7.*q4/4. + 5.*q3/6. + 
     &            17.*q2/20. - 473./420.
            dphidh(i) = sum
         ELSEIF (q < 3.0) THEN
            sum = (-q + 3.0)**5
            wij(i) = sum
            sum = -5.0*(-q + 3.0)**4
            grwij(i) = sum
            sum = -q8/240. + q7/14. - q6/2. + 9.*q5/5. - 27.*q4/8. + 
     &            27.*q3/10. - 169./560.
            fmass(i) = sum
            sum = (-q8 + 20.*q7 - 168.*q6 + 756.*q5 - 1890.*q4 + 
     &            2268.*q3 - 2916.*q + 507.)/(1680.*q)
            fpoten(i) = sum
            sum = -q7/210. + q6/12. - 3.*q5/5. + 9.*q4/4. - 9.*q3/2. + 
     &            81.*q2/20. - 243./140.
            dphidh(i) = sum
         ELSE
            sum = 0.0
            wij(i) = sum
            sum = 0.0
            grwij(i) = sum
            sum = 1.
            fmass(i) = sum
            sum = -1.0/q
            fpoten(i) = sum
            sum = 0.0
            dphidh(i) = sum
         ENDIF
      ENDDO
c
c--Normalisation constant
c
      cnormk = 1./(120.*pi)
      selfnormkernel = 66.
      part1potenkernel = 0.0 ! term already included in fpoten above
      part2potenkernel = 0.0 ! see above
c
c--For dust/gas drag, need double humped kernel
c
      doublehumpnormk = 1./(168.*pi)

      RETURN
      END
