c
c--Program to take tables of the ratio of internal energy to temperature
c     u/T as functions of (rho,T), and output u/T as functions of (rho,u)
c     which is what the code sphNG requires.  At the same time, the code
c     creates a table of u(rho,T) and table of 1/mu as functions of
c     (rho,u), where mu is the mean molecular mass.
c
c--Takes as input the "specheattbl" table, which is generated by 
c     maketables.f
c
c--Requires the subroutine "getcv.f" from sphNG.
c
c--Works in cgs units, which is why the units below are all set to 1.
c
      PROGRAM INVERT

      IMPLICIT NONE

      INCLUDE '../COMMONS/eostbl'
      INCLUDE '../COMMONS/units'

      REAL tg1,rho,lrho,U,ltg1,ltg2,w,K,y1,y2,y3
      INTEGER I,J,nkrho1,N
      INTEGER nrho,ntm
      REAL ltm,um,tm,specific,uoverT,mu,getcv,get1overmu
      REAL cvtable(umxt,umxrh)
      REAL*4 rhoreal4

      umass = 1.
      udist = 1.
      utime = 1.
      udens = 1.
      uergg = 1.
      uergcc = 1.

      OPEN(UNIT=8,FILE='specheattbl',FORM='unformatted')

      PRINT *,"Reading in CV table and making u table"
      PRINT *,''

      DO I=1,umxt
        READ(8) (cvtable(i,j), j=1, umxrh)
        IF (MOD(I,100).EQ.0) PRINT *,cvtable(i,2096),I
         tg1=10.0**((I-1)*0.005)
         DO J=1,umxrh
            utable(i,j)=(10.0**cvtable(i,j))*tg1
            IF(cvtable(i,j).EQ.0.0) THEN
               PRINT *,"Detected zero cv ",i,j,cvtable(i,j),tg1
               STOP
            ENDIF
         ENDDO
      END DO
      CLOSE(8)
      
      OPEN(UNIT=8, FILE='utbl', FORM='unformatted')
      DO i=1,umxrh
        WRITE(8) ((log10(utable(j,i))), j=1, umxt)
      END DO
      CLOSE(8)

      PRINT *,''
      PRINT *,"Finished making u table"
      PRINT *,''
      PRINT *,"Making u/T table"
      PRINT *,''
      
      DO J=1,umxrh
         rho=10.0**((J-eostbl_rho1)*0.005)
         lrho=(J-eostbl_rho1)*0.005
          nkrho1=INT(lrho/0.005)+eostbl_rho1
          IF(lrho.LT.0.0) nkrho1=nkrho1-1
          nkrho1=J

         IF (MOD(J,100).EQ.0) 
     &         PRINT *,"Making density column ",nkrho1,lrho
         K=7.725
         DO I=1,tgmxu
            K=K+0.005
            u=10.0**REAL(K)

            DO N=1,tgmxu-1

               IF(utable(N,nkrho1).LE.u.AND.utable(N+1,nkrho1).GT.u)
     $              THEN

                  ltg1=((N)*0.005)
                  ltg2=((N+1)*0.005)
                  
                  w=(u-utable(N,nkrho1))/
     $                 (utable(N+1,nkrho1)-utable(N,nkrho1))
  
                  tgtable(I,nkrho1)=((1.0-w)*ltg1+w*ltg2)
c                  write(7,*) rho,u,tgtable(I,nkrho1)
                  GOTO 100
               ENDIF
            ENDDO ! N-loop Brute force loop to search for temperatures

!            PRINT *,"Can't seem to get u",I,u,utable(N+1,nkrho1),K
!            PRINT *,u,log10(u),801*0.005
!            tgtable(I,nkrho1)=99.00
!            STOP
            IF(u.GE.utable(tgmxu,nkrho1)) THEN
            !If failed, interpolate from last two points
            ltg1=((1000)*0.005)
            ltg2=1001*0.005
            w=(u-utable(tgmxu-1,nkrho1))/
     $           (utable(tgmxu,nkrho1)-utable(tgmxu-1,nkrho1))
            
            tgtable(I,nkrho1)=((1.0-w)*ltg1+w*ltg2)
            ELSE
               ltg1=((1)*0.005)
            ltg2=2*0.005
            w=(u-utable(1,nkrho1))/
     $           (utable(2,nkrho1)-utable(1,nkrho1))
            
            tgtable(I,nkrho1)=((1.0-w)*ltg1+w*ltg2)
               ENDIF
 100     ENDDO ! I loop ( U to tgmxu)
      ENDDO ! J loop (density to tgmxrh)


      OPEN(UNIT=8,FILE='gasttbl',FORM='unformatted')
  
      DO I=1,tgmxu
        WRITE(8) ((tgtable(i,j)), j=1, tgmxrh)
      END DO
      CLOSE(8)
c
c--Generate molecular mass table (actually 1/mu)  as  function of rho and u
c
      PRINT *,''
      PRINT *,'Finished u/T table'
      PRINT *,''
      PRINT *,'Calculating 1/mu as function of rho and u'
      PRINT *,''

      OPEN(UNIT=10,FILE='molmasstbl',FORM='unformatted')

      DO nrho=-30000,3000,5! log10(density) -20,3,0.005

         IF(MOD(nrho,500).EQ.0) PRINT *,nrho
         lrho=nrho/1000.0
         j=nrho/5+eostbl_rho1
         rho=10.0**lrho
         rhoreal4 = rho

         DO ntm=7730,16715,5
            ltm=ntm/1000.0
            i=ntm/5-1545

            um = 10.0**ltm
            tm=um/getcv(rhoreal4,um)
            CALL GENERATEU(rho,tm,specific,uoverT,mu)
c            IF (MOD(ntm,100).EQ.0) 
c     &          write (*,99001) rho,tm,um,specific,uoverT,
c     &           getcv(rhoreal4,um),1./mu
99001       FORMAT(4(1PE12.5,1X))
            mutable(i,j)=log10(1./mu)
         END DO

         IF(MOD(nrho,500).EQ.0) PRINT *, mutable(i,j)

      ENDDO

c      rho = 2E-15
c      rhoreal4 = rho
c      tm = 10000.0
c      um = 1.40903E+13
c      CALL GENERATEU(rho,tm,specific,uoverT,mu)
c      ltm = get1overmu(rhoreal4,um)
c      WRITE (*,*) rho,tm,um,specific,uoverT,getcv(rhoreal4,um),
c     &     1./mu,ltm
c      STOP

      PRINT *,''
      PRINT *,"Writing 1/mu to disk..."
      PRINT *,''
!J is u J = 1 to umxt rows
!I is density I = 1 to umxrh columns

      DO i=1,mumxu
         WRITE(10) (mutable(i,j), j=1, mumxrh)
      END DO

      PRINT *,"Complete"


c      K=7.725
c      DO I=1,tgmxu
c         K=K+0.005
c         u=10.0**(REAL(K))
c         y1=tgtable(I,2000)
c         WRITE(57,*)  u,10**y1
c        y2=tgtable(I,3999)
c         WRITE(58,*)  u,10**y2
c        y3=tgtable(I,1)
c         WRITE(59,*)  u,10**y3
c      ENDDO
      END
