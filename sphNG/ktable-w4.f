      SUBROUTINE ktable
c*********************************************************
c  This subroutine builds a table for the kernel,
c  the gradient of the kernel, the mass fraction,
c  and the potential energy.
c  The entry is v**2.
c
c  DO NOT EDIT: AUTO-GENERATED by kernels.py
c  KERNEL NAME: Wendland 2/3D C^4 
c  AUTHOR: kernels.py, by Daniel Price
c  GENERATED: 2014-05-12 23:25:48.999924
c
c*********************************************************
      IMPLICIT NONE ! because life is worth living
      INCLUDE 'idim'

      REAL*8 sum, v2max, q, q2, q3, q4, q5, q6, q7, q8, q9
      INTEGER i

      INCLUDE 'COMMONS/physcon'
      INCLUDE 'COMMONS/kerne'
      INCLUDE 'COMMONS/table'
      INCLUDE 'COMMONS/logun'
      INCLUDE 'COMMONS/debug'
c
c--Allow for tracing flow
c
      IF (itrace.EQ.'all') WRITE(iprint, 99001)
99001 FORMAT (' entry subroutine ktable')
c
c--Maximum interaction length and step size
c
      radkernel = 2.0
      part1kernel = 2.0
      v2max = radkernel*radkernel
      dvtable = v2max/itable
      ddvtable = itable/v2max
c
c--Build tables
c
      DO i=0,itable
         q2 = i*dvtable
         q = sqrt(q2)
         q3 = q*q2
         q4 = q*q3
         q5 = q*q4
         q6 = q*q5
         q7 = q*q6
         q8 = q*q7
         q9 = q*q8
         IF (q < 2.0) THEN
            sum = (-q/2. + 1.)**6*(35.*q2/12. + 3.*q + 1.)
            wij(i) = sum
            sum = 11.6666666666667*q2*(0.5*q - 1.0)**5 + 
     &            4.66666666666667*q*(0.5*q - 1.0)**5
            grwij(i) = sum
            sum = q3*(525.*q8 - 6336.*q7 + 30800.*q6 - 73920.*q5 + 
     &            79200.*q4 - 59136.*q2 + 42240.)/16384.
            fmass(i) = sum
            sum = 105.*q6*q4/32768. - 11.*q9/256. + 1925.*q8/8192. - 
     &            165.*q7/256. + 825.*q6/1024. - 231.*q4/256. +
     &            165.*q2/128. - 55./32.
            fpoten(i) = sum
            sum = 1155.*q6*q4/32768. - 55.*q9/128. + 17325.*q8/8192. - 
     &            165.*q7/32. + 5775.*q6/1024. - 1155.*q4/256. +
     &            495.*q2/128. - 55./32.
            dphidh(i) = sum
         ELSE
            sum = 0.0
            wij(i) = sum
            sum = 0.0
            grwij(i) = sum
            sum = 1.
            fmass(i) = sum
            sum = -1.0/q
            fpoten(i) = sum
            sum = 0.0
            dphidh(i) = sum
         ENDIF
      ENDDO
c
c--Normalisation constant
c
      cnormk = 495./(256.*pi)
      selfnormkernel = 1.
      part1potenkernel = 0.0 ! term already included in fpoten above
      part2potenkernel = 0.0 ! see above
c
c--For dust/gas drag, need double humped kernel
c
      doublehumpnormk = 6435./(2048.*pi)

      RETURN
      END
